const { ethers } = require("hardhat");

async function main() {
  console.log("üèÜ FANSTOCK DEMO - R√©volution du Football Amateur\n");

  // D√©ploiement
  console.log("üì¶ √âTAPE 1: Cr√©ation du club FC Montreuil");
  const [clubOwner, fan1, fan2, fan3, sponsor] = await ethers.getSigners();

  const clubInfo = {
    name: "FC Montreuil",
    location: "Montreuil, France", 
    foundedYear: 1985,
    league: "Division d'Honneur R√©gionale"
  };

  const tokenSale = {
    pricePerToken: ethers.parseEther("1"), // 1 CHZ = 1 token
    maxSupply: 10000,
    soldTokens: 0,
    saleActive: true,
    minPurchase: 1,
    maxPurchase: 500
  };

  const revenueShare = {
    playerSalesShare: 20,
    sponsorshipShare: 15, 
    tournamentShare: 25,
    totalRevenue: 0,
    totalDistributed: 0
  };

  const FanStockToken = await ethers.getContractFactory("FanStockToken");
  const fanStock = await FanStockToken.deploy(
    "FC Montreuil Token",
    "FCM", 
    clubInfo,
    tokenSale,
    revenueShare
  );
  await fanStock.waitForDeployment();

  console.log("‚úÖ Club cr√©√©:", clubInfo.name);
  console.log("üìç Contrat d√©ploy√©:", await fanStock.getAddress());
  console.log("üí∞ Prix par token:", ethers.formatEther(tokenSale.pricePerToken), "CHZ");
  console.log("üéØ Max supply:", tokenSale.maxSupply, "tokens\n");

  // Les fans ach√®tent des tokens
  console.log("üì¶ √âTAPE 2: Les fans locaux ach√®tent des tokens");
  
  console.log("üè† Fan local 1 ach√®te 50 tokens (50 CHZ)");
  await fanStock.connect(fan1).buyTokens(50, { 
    value: ethers.parseEther("50") 
  });
  
  console.log("üè† Fan local 2 ach√®te 30 tokens (30 CHZ)");
  await fanStock.connect(fan2).buyTokens(30, { 
    value: ethers.parseEther("30") 
  });
  
  console.log("üè† Fan local 3 ach√®te 20 tokens (20 CHZ)");  
  await fanStock.connect(fan3).buyTokens(20, {
    value: ethers.parseEther("20")
  });

  const saleInfo = await fanStock.getTokenSaleInfo();
  console.log("‚úÖ Total vendu:", saleInfo.soldTokens.toString(), "tokens");
  console.log("üí∞ Fonds lev√©s:", ethers.formatEther(ethers.parseEther("100")), "CHZ");
  
  console.log("üë• Balances des fans:");
  console.log("   Fan 1:", ethers.formatEther(await fanStock.balanceOf(fan1.address)), "tokens");
  console.log("   Fan 2:", ethers.formatEther(await fanStock.balanceOf(fan2.address)), "tokens");  
  console.log("   Fan 3:", ethers.formatEther(await fanStock.balanceOf(fan3.address)), "tokens\n");

  // Gouvernance en action
  console.log("üì¶ √âTAPE 3: Gouvernance d√©mocratique");
  
  console.log("üó≥Ô∏è  Le club propose: 'Acheter nouveaux maillots'");
  await fanStock.createProposal(
    "Nouveaux maillots √©quipe premi√®re",
    "Remplacer les maillots usag√©s par des nouveaux avec sponsor local",
    0, // EQUIPMENT_PURCHASE
    ethers.parseEther("15"), // 15 CHZ
    "Maillots Nike, couleur rouge et blanc traditionnelle",
    7 // 7 jours de vote
  );

  console.log("üó≥Ô∏è  Le club propose: 'Embaucher entra√Æneur youth'");
  await fanStock.createProposal(
    "Entra√Æneur pour √©quipe U15",
    "Recruter un entra√Æneur dipl√¥m√© pour d√©velopper les jeunes talents",
    0, // COACH_HIRING  
    ethers.parseEther("25"), // 25 CHZ/mois
    "Entra√Æneur avec licence UEFA B minimum",
    7
  );

  console.log("‚úÖ Propositions cr√©√©es!\n");

  // Les fans votent
  console.log("üì¶ √âTAPE 4: Les fans votent sur les propositions");
  
  console.log("‚úÖ Fan 1 (50 tokens) vote POUR les nouveaux maillots");
  await fanStock.connect(fan1).voteOnProposal(1, true);
  
  console.log("‚úÖ Fan 2 (30 tokens) vote POUR les nouveaux maillots"); 
  await fanStock.connect(fan2).voteOnProposal(1, true);
  
  console.log("‚ùå Fan 3 (20 tokens) vote CONTRE les nouveaux maillots");
  await fanStock.connect(fan3).voteOnProposal(1, false);

  console.log("‚úÖ Fan 1 vote POUR l'entra√Æneur youth");
  await fanStock.connect(fan1).voteOnProposal(2, true);
  
  console.log("‚ùå Fan 2 vote CONTRE l'entra√Æneur youth");
  await fanStock.connect(fan2).voteOnProposal(2, false);

  const results1 = await fanStock.getProposalResults(1);
  const results2 = await fanStock.getProposalResults(2);
  
  console.log("\nüìä R√âSULTATS DES VOTES:");
  console.log("üëï Maillots:", ethers.formatEther(results1.votesFor), "pour vs", ethers.formatEther(results1.votesAgainst), "contre");
  console.log("üë®‚Äçüè´ Entra√Æneur:", ethers.formatEther(results2.votesFor), "pour vs", ethers.formatEther(results2.votesAgainst), "contre\n");

  // Revenus du club  
  console.log("üì¶ √âTAPE 5: Revenus et partage");
  
  console.log("üí∞ Sponsoring local re√ßu: 500 CHZ");
  await fanStock.addRevenue("Sponsoring boulangerie locale", ethers.parseEther("500"));
  
  console.log("üèÜ Gain tournoi r√©gional: 200 CHZ");
  await fanStock.addRevenue("Victoire Coupe R√©gionale", ethers.parseEther("200"));
  
  console.log("‚öΩ Vente joueur en academy: 1000 CHZ");
  await fanStock.addRevenue("Transfer jeune vers club pro", ethers.parseEther("1000"));

  const revenueInfo = await fanStock.getRevenueInfo();
  console.log("‚úÖ Total revenus club:", ethers.formatEther(revenueInfo.totalRevenue), "CHZ");

  // Distribution dividendes
  console.log("üí∏ Distribution des dividendes aux d√©tenteurs...");
  await fanStock.distributeDividends();
  
  console.log("üíé Dividendes disponibles:");
  const div1 = await fanStock.calculateDividends(fan1.address);
  const div2 = await fanStock.calculateDividends(fan2.address); 
  const div3 = await fanStock.calculateDividends(fan3.address);
  
  console.log("   Fan 1 (50 tokens):", ethers.formatEther(div1), "CHZ");
  console.log("   Fan 2 (30 tokens):", ethers.formatEther(div2), "CHZ");
  console.log("   Fan 3 (20 tokens):", ethers.formatEther(div3), "CHZ\n");

  console.log("üì¶ √âTAPE 6: R√©capitulatif FanStock");
  console.log("üèÜ R√âSULTATS:");
  console.log("   üí∞ Fonds lev√©s:", ethers.formatEther(ethers.parseEther("100")), "CHZ");
  console.log("   üìä Revenus g√©n√©r√©s:", ethers.formatEther(revenueInfo.totalRevenue), "CHZ");
  console.log("   üë• D√©tenteurs:", "3 fans locaux");
  console.log("   üó≥Ô∏è  Propositions:", "2 votes d√©mocratiques"); 
  console.log("   üí∏ Dividendes:", "R√©partis proportionnellement");

  console.log("\nüöÄ POURQUOI FANSTOCK R√âVOLUTIONNE LE FOOTBALL AMATEUR:");
  console.log("   ‚úÖ Financement participatif accessible (1 CHZ minimum)");
  console.log("   ‚úÖ Vraie propri√©t√© et gouvernance d√©mocratique");
  console.log("   ‚úÖ Retour sur investissement via dividendes");
  console.log("   ‚úÖ Transparence totale des finances du club");
  console.log("   ‚úÖ Engagement communautaire renforc√©");
  console.log("   ‚úÖ Technologie Chiliz √©prouv√©e, nouveau march√©\n");

  console.log("üéØ Pr√™t pour le hackathon Chiliz ! üèÜ");
}

if (require.main === module) {
  main()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error("‚ùå Erreur:", error);
      process.exit(1);
    });
}

module.exports = main;