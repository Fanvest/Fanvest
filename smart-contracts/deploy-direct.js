const { ethers } = require("ethers");
require("dotenv").config();

// Bytecode et ABI du contrat FanToken compil√©
const contractBytecode = "0x608060405234801562000010575f80fd5b5060405162001a2b38038062001a2b833981810160405281019062000036919062000508565b82828160039081620000499190620007f5565b5080600490816200005b9190620007f5565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060069081620000af9190620007f5565b50620000cc3369d3c21bcecceda1000000620000d560201b60201c565b50505062000a05565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000148575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200013f91906200091c565b60405180910390fd5b6200015b5f83836200015f60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001b3578060025f828254620001a6919062000964565b9250508190555062000284565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200023f578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200023693929190620009af565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002cd578060025f828254039250508190555062000317565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003769190620009ea565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003e4826200039c565b810181811067ffffffffffffffff82111715620004065762000405620003ac565b5b80604052505050565b5f6200041a62000383565b9050620004288282620003d9565b919050565b5f67ffffffffffffffff8211156200044a5762000449620003ac565b5b62000455826200039c565b9050602081019050919050565b5f5b838110156200048157808201518184015260208101905062000464565b5f8484015250505050565b5f620004a26200049c846200042d565b6200040f565b905082815260208101848484011115620004c157620004c062000398565b5b620004ce84828562000462565b509392505050565b5f82601f830112620004ed57620004ec62000394565b5b8151620004ff8482602086016200048c565b91505092915050565b5f805f606084860312156200052257620005216200038c565b5b5f84015167ffffffffffffffff81111562000542576200054162000390565b5b6200055086828701620004d6565b935050602084015167ffffffffffffffff81111562000574576200057362000390565b5b6200058286828701620004d6565b925050604084015167ffffffffffffffff811115620005a657620005a562000390565b5b620005b486828701620004d6565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200060d57607f821691505b602082108103620006235762000622620005c8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200064a565b6200069386836200064a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620006dd620006d7620006d184620006ab565b620006b4565b620006ab565b9050919050565b5f819050919050565b620006f883620006bd565b620007106200070782620006e4565b84845462000656565b825550505050565b5f90565b6200072662000718565b62000733818484620006ed565b505050565b5b818110156200075a576200074e5f826200071c565b60018101905062000739565b5050565b601f821115620007a957620007738162000629565b6200077e846200063b565b810160208510156200078e578190505b620007a66200079d856200063b565b83018262000738565b50505b505050565b5f82821c905092915050565b5f620007cb5f1984600802620007ae565b1980831691505092915050565b5f620007e58383620007ba565b9150826002028217905092915050565b6200080082620005be565b67ffffffffffffffff8111156200081c576200081b620003ac565b5b620008288254620005f5565b620008358282856200075e565b5f60209050601f8311600181146200086b575f841562000856578287015190505b620008628582620007d8565b865550620008d1565b601f1984166200087b8662000629565b5f5b82811015620008a4578489015182556001820191506020850194506020810190506200087d565b86831015620008c45784890151620008c0601f891682620007ba565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200090482620008d9565b9050919050565b6200091681620008f8565b82525050565b5f602082019050620009315f8301846200090b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200097082620006ab565b91506200097d83620006ab565b925082820190508082111562000998576200099762000937565b5b92915050565b620009a981620006ab565b82525050565b5f606082019050620009c45f8301866200090b565b620009d360208301856200099e565b620009e260408301846200099e565b949350505050565b5f602082019050620009ff5f8301846200099e565b92915050565b6110188062000a135f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80635a9b0b891161006f5780635a9b0b891461018e57806370a08231146101ae57806395d89b41146101de578063a9059cbb146101fc578063ce27489d1461022c578063dd62ed3e1461024a576100b2565b806306fdde03146100b6578063095ea7b3146100d45780630efd09731461010457806318160ddd1461012257806323b872dd14610140578063313ce56714610170575b5f80fd5b6100be61027a565b6040516100cb9190610c4e565b60405180910390f35b6100ee60048036038101906100e99190610cff565b61030a565b6040516100fb9190610d57565b60405180910390f35b61010c61032c565b6040516101199190610d7f565b60405180910390f35b61012a610351565b6040516101379190610da7565b60405180910390f35b61015a60048036038101906101559190610dc0565b61035a565b6040516101679190610d57565b60405180910390f35b610178610388565b6040516101859190610e2b565b60405180910390f35b610196610390565b6040516101a593929190610e44565b60405180910390f35b6101c860048036038101906101c39190610e87565b61043b565b6040516101d59190610da7565b60405180910390f35b6101e6610480565b6040516101f39190610c4e565b60405180910390f35b61021660048036038101906102119190610cff565b610510565b6040516102239190610d57565b60405180910390f35b610234610532565b6040516102419190610c4e565b60405180910390f35b610264600480360381019061025f9190610eb2565b6105be565b6040516102719190610da7565b60405180910390f35b60606003805461028990610f1d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610f1d565b80156103005780601f106102d757610100808354040283529160200191610300565b820191905f5260205f20905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b5f80610314610640565b9050610321818585610647565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f80610364610640565b9050610371858285610659565b61037c8585856106ec565b60019150509392505050565b5f6012905090565b6060805f61039c61027a565b60066103a6610351565b8180546103b290610f1d565b80601f01602080910402602001604051908101604052809291908181526020018280546103de90610f1d565b80156104295780601f1061040057610100808354040283529160200191610429565b820191905f5260205f20905b81548152906001019060200180831161040c57829003601f168201915b50505050509150925092509250909192565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461048f90610f1d565b80601f01602080910402602001604051908101604052809291908181526020018280546104bb90610f1d565b80156105065780601f106104dd57610100808354040283529160200191610506565b820191905f5260205f20905b8154815290600101906020018083116104e957829003601f168201915b5050505050905090565b5f8061051a610640565b90506105278185856106ec565b600191505092915050565b6006805461053f90610f1d565b80601f016020809104026020016040519081016040528092919081815260200182805461056b90610f1d565b80156105b65780601f1061058d576101008083540402835291602001916105b6565b820191905f5260205f20905b81548152906001019060200180831161059957829003601f168201915b505050505081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61065483838360016107dc565b505050565b5f61066484846105be565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106e657818110156106d7578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106ce93929190610f4d565b60405180910390fd5b6106e584848484035f6107dc565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361075c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107539190610d7f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107cc575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107c39190610d7f565b60405180910390fd5b6107d78383836109ab565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361084c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108439190610d7f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108bc575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108b39190610d7f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156109a5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161099c9190610da7565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109fb578060025f8282546109ef9190610faf565b92505081905550610ac9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a84578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a7b93929190610f4d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b10578060025f8282540392505081905550610b5a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bb79190610da7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610bfb578082015181840152602081019050610be0565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610c2082610bc4565b610c2a8185610bce565b9350610c3a818560208601610bde565b610c4381610c06565b840191505092915050565b5f6020820190508181035f830152610c668184610c16565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c9b82610c72565b9050919050565b610cab81610c91565b8114610cb5575f80fd5b50565b5f81359050610cc681610ca2565b92915050565b5f819050919050565b610cde81610ccc565b8114610ce8575f80fd5b50565b5f81359050610cf981610cd5565b92915050565b5f8060408385031215610d1557610d14610c6e565b5b5f610d2285828601610cb8565b9250506020610d3385828601610ceb565b9150509250929050565b5f8115159050919050565b610d5181610d3d565b82525050565b5f602082019050610d6a5f830184610d48565b92915050565b610d7981610c91565b82525050565b5f602082019050610d925f830184610d70565b92915050565b610da181610ccc565b82525050565b5f602082019050610dba5f830184610d98565b92915050565b5f805f60608486031215610dd757610dd6610c6e565b5b5f610de486828701610cb8565b9350506020610df586828701610cb8565b9250506040610e0686828701610ceb565b9150509250925092565b5f60ff82169050919050565b610e2581610e10565b82525050565b5f602082019050610e3e5f830184610e1c565b92915050565b5f6060820190508181035f830152610e5c8186610c16565b90508181036020830152610e708185610c16565b9050610e7f6040830184610d98565b949350505050565b5f60208284031215610e9c57610e9b610c6e565b5b5f610ea984828501610cb8565b91505092915050565b5f8060408385031215610ec857610ec7610c6e565b5b5f610ed585828601610cb8565b9250506020610ee685828601610cb8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f3457607f821691505b602082108103610f4757610f46610ef0565b5b50919050565b5f606082019050610f605f830186610d70565b610f6d6020830185610d98565b610f7a6040830184610d98565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fb982610ccc565b9150610fc483610ccc565b9250828201905080821115610fdc57610fdb610f82565b5b9291505056fea26469706673582212206bd5c24786a0adb71e03f85388d4bbc35840112d2df68c064e3ba574abf344e964736f6c6343000814003300000000000000000000000000000000000000000000000000000000000000134861636b6174686f6e2046616e20546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044841434b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000154368696c697a204861636b6174686f6e20436c75620000000000000000000000";

const contractAbi = [
  "constructor(string memory name, string memory symbol, string memory _clubName)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function decimals() view returns (uint8)",
  "function totalSupply() view returns (uint256)",
  "function balanceOf(address account) view returns (uint256)",
  "function transfer(address to, uint256 amount) returns (bool)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 amount) returns (bool)",
  "function transferFrom(address from, address to, uint256 amount) returns (bool)",
  "function clubName() view returns (string)",
  "function club() view returns (address)",
  "function getInfo() view returns (string, string, uint256)"
];

async function main() {
    console.log("üöÄ D√©ploiement direct avec ethers.js...");

    const provider = new ethers.JsonRpcProvider("https://88882.rpc.thirdweb.com/ddf001d0d15ae5cbc29b2b62c6591f35");
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

    console.log("üìç D√©ployeur:", wallet.address);

    const balance = await provider.getBalance(wallet.address);
    console.log("üí∞ Solde:", ethers.formatEther(balance), "CHZ");

    // Cr√©er la factory du contrat
    const factory = new ethers.ContractFactory(contractAbi, contractBytecode, wallet);

    console.log("‚è≥ D√©ploiement...");

    try {
        // D√©ployer le contrat
        const contract = await factory.deploy(
            "Hackathon Fan Token",
            "HACK", 
            "Chiliz Hackathon Club",
            {
                gasLimit: 1200000,
                gasPrice: ethers.parseUnits("10", "gwei")
            }
        );

        console.log("üì° Transaction envoy√©e:", contract.deploymentTransaction().hash);
        
        // Attendre la confirmation
        await contract.waitForDeployment();
        const address = await contract.getAddress();

        console.log("\n‚úÖ Contrat d√©ploy√© avec succ√®s !");
        console.log("üìç Adresse:", address);
        console.log("üîó Chiliscan:", `https://testnet.chiliscan.com/address/${address}`);
        console.log("üîó Explorer Spicy:", `https://spicy-explorer.chiliz.com/address/${address}`);

        // Test des fonctions
        console.log("\nüîç Test du contrat...");
        const [name, clubName, totalSupply] = await contract.getInfo();
        console.log(`   ‚úì Nom: ${name}`);
        console.log(`   ‚úì Club: ${clubName}`);
        console.log(`   ‚úì Supply: ${ethers.formatEther(totalSupply)} tokens`);

        console.log("\nüéâ D√©ploiement r√©ussi !");

    } catch (error) {
        console.error("‚ùå Erreur:", error.message);
    }
}

main().catch(console.error);